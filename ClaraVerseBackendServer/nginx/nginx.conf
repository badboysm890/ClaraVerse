events {events {events {

    worker_connections 1024;

}    worker_connections 1024;    worker_connections 1024;



http {}}

    include       /etc/nginx/mime.types;

    default_type  application/octet-stream;

    

    sendfile on;http {http {

    tcp_nopush on;

    tcp_nodelay on;    include       /etc/nginx/mime.types;    upstream comfyui {

    keepalive_timeout 65;

        default_type  application/octet-stream;        server clara_comfyui:8188;

    # WebSocket upgrade headers

    map $http_upgrade $connection_upgrade {        }

        default upgrade;

        '' close;    # Log format    

    }

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '    upstream python_backend {

    # Upstream definitions

    upstream comfyui_backend {                    '$status $body_bytes_sent "$http_referer" '        server clara_python:5000;

        server clara_comfyui:8188;

    }                    '"$http_user_agent" "$http_x_forwarded_for"';    }

    

    upstream n8n_backend {        

        server clara_n8n:5678;

    }    access_log /var/log/nginx/access.log main;    upstream n8n {

    

    upstream python_backend {    error_log /var/log/nginx/error.log warn;        server clara_n8n:5678;

        server clara_python:8000;

    }        }



    server {    sendfile on;

        listen 80;

        server_name _;    tcp_nopush on;    # WebSocket support

        

        # Increase upload limits for ComfyUI    tcp_nodelay on;    map $http_upgrade $connection_upgrade {

        client_max_body_size 100M;

            keepalive_timeout 65;        default upgrade;

        # Health check endpoint

        location /health {    types_hash_max_size 2048;        '' close;

            add_header Content-Type "application/json";

            return 200 '{"status":"healthy","services":["comfyui","n8n","python-backend"]}';        }

        }

            # Gzip Settings

        # ComfyUI service

        location /comfyui/ {    gzip on;    server {

            proxy_pass http://comfyui_backend/;

            proxy_http_version 1.1;    gzip_vary on;        listen 80;

            proxy_set_header Upgrade $http_upgrade;

            proxy_set_header Connection $connection_upgrade;    gzip_proxied any;        server_name _;

            proxy_set_header Host $http_host;

            proxy_set_header X-Real-IP $remote_addr;    gzip_comp_level 6;        

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-Forwarded-Proto $scheme;    gzip_types        # Increase client body size for file uploads

            proxy_cache_bypass $http_upgrade;

            proxy_read_timeout 86400;        text/plain        client_max_body_size 100M;

        }

                text/css        

        # n8n service

        location /n8n/ {        text/xml        # Timeout settings

            proxy_pass http://n8n_backend/;

            proxy_http_version 1.1;        text/javascript        proxy_read_timeout 300s;

            proxy_set_header Upgrade $http_upgrade;

            proxy_set_header Connection $connection_upgrade;        application/json        proxy_connect_timeout 75s;

            proxy_set_header Host $http_host;

            proxy_set_header X-Real-IP $remote_addr;        application/javascript        proxy_send_timeout 300s;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-Forwarded-Proto $scheme;        application/xml+rss

            proxy_cache_bypass $http_upgrade;

        }        application/atom+xml        # ComfyUI - AI Image Generation (with WebSocket support)

        

        # Python backend API        image/svg+xml;        location /comfyui/ {

        location /api/ {

            proxy_pass http://python_backend/;            proxy_pass http://comfyui/;

            proxy_set_header Host $http_host;

            proxy_set_header X-Real-IP $remote_addr;    # Upstream definitions            proxy_set_header Host $host;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-Forwarded-Proto $scheme;    upstream comfyui_backend {            proxy_set_header X-Real-IP $remote_addr;

        }

        server clara_comfyui:8188;            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Root - ClaraVerse Server Dashboard

        location / {    }            proxy_set_header X-Forwarded-Proto $scheme;

            root /usr/share/nginx/html;

            index dashboard.html;                

            try_files $uri $uri/ /dashboard.html;

        }    upstream n8n_backend {            # WebSocket support for ComfyUI

    }

}        server clara_n8n:5678;            proxy_http_version 1.1;

    }            proxy_set_header Upgrade $http_upgrade;

                proxy_set_header Connection $connection_upgrade;

    upstream python_backend {            proxy_cache_bypass $http_upgrade;

        server clara_python:8000;        }

    }

        # Python Backend - Core AI APIs

    server {        location /api/ {

        listen 80;            proxy_pass http://python_backend/;

        server_name _;            proxy_set_header Host $host;

                    proxy_set_header X-Real-IP $remote_addr;

        # Increase upload limits for ComfyUI            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        client_max_body_size 100M;            proxy_set_header X-Forwarded-Proto $scheme;

                }

        # WebSocket upgrade headers

        map $http_upgrade $connection_upgrade {        # n8n - Workflow Automation

            default upgrade;        location /n8n/ {

            '' close;            proxy_pass http://n8n/;

        }            proxy_set_header Host $host;

                    proxy_set_header X-Real-IP $remote_addr;

        # Health check endpoint            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        location /health {            proxy_set_header X-Forwarded-Proto $scheme;

            add_header Content-Type "application/json";            

            return 200 '{"status":"healthy","services":["comfyui","n8n","python-backend"],"timestamp":"$time_iso8601"}';            # WebSocket support for n8n

        }            proxy_http_version 1.1;

                    proxy_set_header Upgrade $http_upgrade;

        # ComfyUI service            proxy_set_header Connection $connection_upgrade;

        location /comfyui/ {            proxy_cache_bypass $http_upgrade;

            proxy_pass http://comfyui_backend/;        }

            proxy_http_version 1.1;

            proxy_set_header Upgrade $http_upgrade;        # Health Check Endpoint

            proxy_set_header Connection $connection_upgrade;        location /health {

            proxy_set_header Host $http_host;            add_header Content-Type application/json;

            proxy_set_header X-Real-IP $remote_addr;            return 200 '{"status":"ok","services":{"comfyui":"http://localhost/comfyui/","python":"http://localhost/api/","n8n":"http://localhost/n8n/"}}';

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;        }

            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_cache_bypass $http_upgrade;        # Root - ClaraVerse Server Dashboard

            proxy_read_timeout 86400;        location / {

        }            root /usr/share/nginx/html;

                    index dashboard.html;

        # n8n service            try_files $uri $uri/ /dashboard.html;

        location /n8n/ {        }

            proxy_pass http://n8n_backend/;<!DOCTYPE html>

            proxy_http_version 1.1;<html lang="en">

            proxy_set_header Upgrade $http_upgrade;<head>

            proxy_set_header Connection $connection_upgrade;    <meta charset="UTF-8">

            proxy_set_header Host $http_host;    <meta name="viewport" content="width=device-width, initial-scale=1.0">

            proxy_set_header X-Real-IP $remote_addr;    <title>ClaraVerse Remote Server</title>

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    <style>

            proxy_set_header X-Forwarded-Proto $scheme;        body { 

            proxy_cache_bypass $http_upgrade;            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; 

        }            margin: 0; 

                    padding: 40px; 

        # Python backend API            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);

        location /api/ {            min-height: 100vh;

            proxy_pass http://python_backend/;        }

            proxy_set_header Host $http_host;        .container { 

            proxy_set_header X-Real-IP $remote_addr;            max-width: 900px; 

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            margin: 0 auto; 

            proxy_set_header X-Forwarded-Proto $scheme;            background: white; 

        }            padding: 40px; 

            border-radius: 16px; 

        # Root - ClaraVerse Server Dashboard            box-shadow: 0 20px 40px rgba(0,0,0,0.1);

        location / {        }

            root /usr/share/nginx/html;        .header {

            index dashboard.html;            text-align: center;

            try_files $uri $uri/ /dashboard.html;            margin-bottom: 40px;

        }        }

    }        .logo {

}            font-size: 3em;
            margin-bottom: 10px;
        }
        h1 { 
            color: #2c3e50; 
            margin: 0;
            font-size: 2.5em;
            font-weight: 700;
        }
        .subtitle {
            color: #7f8c8d;
            font-size: 1.2em;
            margin-top: 10px;
        }
        .services {
            display: grid;
            gap: 20px;
            margin: 40px 0;
        }
        .service { 
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 30px; 
            border-radius: 12px; 
            border-left: 6px solid var(--accent-color);
            transition: transform 0.2s, box-shadow 0.2s;
            position: relative;
            overflow: hidden;
        }
        .service:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        }
        .service:nth-child(1) { --accent-color: #e74c3c; }
        .service:nth-child(2) { --accent-color: #3498db; }
        .service:nth-child(3) { --accent-color: #2ecc71; }
        .service-icon {
            font-size: 2.5em;
            margin-bottom: 15px;
            display: block;
        }
        .service h3 { 
            margin: 0 0 10px 0; 
            color: #2c3e50;
            font-size: 1.4em;
            font-weight: 600;
        }
        .service p {
            color: #5a6c7d;
            margin: 0 0 20px 0;
            line-height: 1.6;
        }
        .service a { 
            background: var(--accent-color);
            color: white;
            text-decoration: none; 
            font-weight: 600;
            padding: 12px 24px;
            border-radius: 8px;
            display: inline-block;
            transition: opacity 0.2s;
        }
        .service a:hover { 
            opacity: 0.9;
            transform: translateX(5px);
        }
        .status { 
            text-align: center; 
            margin: 40px 0; 
        }
        .status button { 
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white; 
            border: none; 
            padding: 15px 30px; 
            border-radius: 25px; 
            cursor: pointer;
            font-size: 1.1em;
            font-weight: 600;
            transition: transform 0.2s;
        }
        .status button:hover {
            transform: scale(1.05);
        }
        .footer {
            text-align: center;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #dee2e6;
            color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">&#x1F680;</div>
            <h1>ClaraVerse Remote Server</h1>
            <p class="subtitle">Your AI-Powered Creative Suite is Ready!</p>
        </div>
        
        <div class="services">
            <div class="service">
                <span class="service-icon">&#x1F3A8;</span>
                <h3>ComfyUI - AI Image Generation</h3>
                <p>Create stunning AI-generated images with advanced workflows and custom nodes</p>
                <a href="/comfyui/" target="_blank">Open ComfyUI &#8594;</a>
            </div>
            
            <div class="service">
                <span class="service-icon">&#x1F527;</span>
                <h3>n8n - Workflow Automation</h3>
                <p>Automate tasks and create powerful workflows with visual programming</p>
                <a href="/n8n/" target="_blank">Open n8n &#8594;</a>
            </div>
            
            <div class="service">
                <span class="service-icon">&#x1F40D;</span>
                <h3>Python Backend - AI APIs</h3>
                <p>Core AI processing and REST APIs for advanced machine learning tasks</p>
                <a href="/api/docs" target="_blank">View API Docs &#8594;</a>
            </div>
        </div>
        
        <div class="status">
            <button onclick="checkHealth()">&#x1F4CA; Check Server Health</button>
            <div id="health-result"></div>
        </div>
        
        <div class="footer">
            <p>ClaraVerse Remote Server | Powered by Docker & Nginx</p>
        </div>
    </div>
    
    <script>
        function checkHealth() {
            fetch(\"/health\")
                .then(response => response.json())
                .then(data => {
                    document.getElementById(\"health-result\").innerHTML = 
                        \"<p style=\\\"color: #28a745; margin-top: 15px; font-weight: 600;\\\">&#x2705; All services are healthy and running!</p>\";
                })
                .catch(error => {
                    document.getElementById(\"health-result\").innerHTML = 
                        \"<p style=\\\"color: #dc3545; margin-top: 15px; font-weight: 600;\\\">&#x26A0; Some services may still be starting up...</p>\";
                });
        }
        
        // Auto-check health on page load
        window.addEventListener("load", checkHealth);
    </script>
</body>
</html>';
        }
    }
}